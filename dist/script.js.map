{"version":3,"sources":["script.js"],"names":["video","document","getElementById","stopStreaming","querySelector","avatarImgs","querySelectorAll","avatarImgStart","avatarLamp","panelBox","expressionTxt","expressionTitle","loader","status","statusCode","panel","dateTime","gender","age","exp","angry","neutral","happy","surprised","disgusted","fearful","sad","d","Date","nD","toString","sD","split","splice","innerText","innerHTML","getAvatar","mood","forEach","i","classList","style","display","startVideo","navigator","mediaDevices","getUserMedia","facingMode","then","stream","srcObject","catch","err","console","error","stopStreamedVideo","videoElem","tracks","getTracks","log","track","stop","Promise","all","faceapi","nets","tinyFaceDetector","loadFromUri","faceLandmark68Net","faceRecognitionNet","faceExpressionNet","ageGenderNet","addEventListener","height","setInterval","detectAllFaces","TinyFaceDetectorOptions","withFaceLandmarks","withFaceExpressions","withAgeAndGender","detections","visibility","dislay","backgroundColor","expressions","toFixed","e","el","target","elClass","remove","add","location","reload"],"mappings":"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","file":"script.js","sourceRoot":"..","sourcesContent":["const video = document.getElementById('video');\nconst stopStreaming = document.querySelector('#stopStreaming');\nconst avatarImgs = document.querySelectorAll('.img-avatar');\nconst avatarImgStart = document.querySelector('.img-avatar-start');\nconst avatarLamp = document.querySelector('.avatar-lamp');\nconst panelBox = document.querySelector('#panelBox');\nconst expressionTxt = document.querySelector('#expression-txt');\nconst expressionTitle = document.querySelector('#expression-title');\nconst loader = document.querySelector('.loading');\nconst status = document.querySelector('#status');\nconst statusCode = document.querySelector('#statusCode');\nconst panel = document.querySelector('.panel');\nconst dateTime = document.querySelector('#date');\nlet gender=\"\";\nlet age=\"\";\nlet exp=\"\";\nlet angry=\"\";\nlet neutral=\"\";\nlet happy=\"\";\nlet surprised=\"\";\nlet disgusted=\"\";\nlet fearful=\"\";\nlet sad=\"\";\nlet d = new Date();\nlet nD = d.toString();\nlet sD = nD.split(' ').splice(0, 5);\n\n// console.log([stopStreaming]);\n\ndateTime.innerText = `${sD[0]} ${sD[1]} ${sD[2]} ${sD[3]} ${sD[4]}`;\n// status.innerHTML = '<code class=\"label\">loading module...</code>';\nstatusCode.innerHTML = 'loading module...';\n\nlet getAvatar = (mood, gender) => {\n  if (mood[0] > 0.6 || mood[0] >= 1) {\n    if (gender === 'male') {\n      avatarImgs.forEach(i => {\n        if (i.classList[1] === `${mood[1]}-male`) {\n          // i.style.opacity = 1;\n          i.style.display = 'block';\n        } else {\n          // i.style.opacity = 0;\n          i.style.display = 'none';\n        }\n      });\n    }\n    if (gender === 'female') {\n      avatarImgs.forEach(i => {\n        if (i.classList[1] === `${mood[1]}-female`) {\n          // i.style.opacity = 1;\n          i.style.display = 'block';\n        } else {\n          // i.style.opacity = 0;\n          i.style.display = 'none';\n        }\n      });\n    }\n    expressionTxt.innerText = mood[1];\n  }\n};\n\n  Promise.all([\n    faceapi.nets.tinyFaceDetector.loadFromUri('/models'),\n    faceapi.nets.faceLandmark68Net.loadFromUri('/models'),\n    faceapi.nets.faceRecognitionNet.loadFromUri('/models'),\n    faceapi.nets.faceExpressionNet.loadFromUri('/models'),\n    faceapi.nets.ageGenderNet.loadFromUri('/models'),\n  ]).then(startVideo);\n\nfunction startVideo() {\n  navigator.mediaDevices\n    .getUserMedia({video: {facingMode: 'user'}})\n    .then(function(stream) {\n      /* use the stream */\n      video.srcObject = stream;\n    })\n    .catch(function(err) {\n      /* handle the error */\n      console.error(err);\n    });\n  // console.log('start video session...');\n  // status.innerHTML = '<code class=\"label\">start video session...</code>';\n  statusCode.innerHTML = 'start video session...';\n}\nfunction stopStreamedVideo(videoElem) {\n  let stream = videoElem.srcObject;\n  let tracks = stream.getTracks();\n  console.log(stream,tracks)\n  tracks.forEach(function(track) {\n    track.stop();\n  });\n  videoElem.srcObject = null;\n}\nvideo.addEventListener('play', () => {\n  //status.innerHTML = '<code class=\"label\">initialize  detection..</code>';\n  statusCode.innerHTML = 'initialize detection..';\n  // avatarLamp.style.backgroundColor = 'orange';\n  panel.style.height = '400px';\n  avatarImgStart.style.display = 'block';\n  expressionTxt.innerText = '...';\n\n  setInterval(async () => {\n    const detections = await faceapi\n      .detectAllFaces(video, new faceapi.TinyFaceDetectorOptions())\n      .withFaceLandmarks()\n      .withFaceExpressions()\n      .withAgeAndGender();\n    if (detections[0]) {\n      gender = detections[0].gender;\n      // status.innerHTML= \"\";\n      status.style.visibility= \"hidden\";\n      status.style.dislay= \"none\";\n      statusCode.innerHTML= \"\";\n      loader.style.display = \"none\"; // hide preloader\n      avatarImgStart.style.display = \"none\";\n      avatarLamp.style.backgroundColor = 'lightgreen';\n      exp = detections[0].expressions;\n      angry = [exp.angry.toFixed(2), 'angry'];\n      neutral = [exp.neutral.toFixed(2), 'neutral'];\n      happy = [exp.happy.toFixed(2), 'happy'];\n      surprised = [exp.surprised.toFixed(2), 'surprised'];\n      disgusted = [exp.disgusted.toFixed(2), 'disgusted'];\n      fearful = [exp.fearful.toFixed(2), 'fearful'];\n      sad = [exp.sad.toFixed(2), 'sad'];\n\n      getAvatar(angry, gender);\n      getAvatar(neutral, gender);\n      getAvatar(happy, gender);\n      getAvatar(surprised, gender);\n      getAvatar(disgusted, gender);\n      getAvatar(sad, gender);\n    }\n  }, 500);\n\n  stopStreaming.style.display = 'block';\n\n  stopStreaming.addEventListener('click', e => {\n    let el = e.target;\n    let elClass = e.target.classList[1];\n    // console.log(elClass);\n    if (elClass === 'icon-cross') {\n      el.classList.remove('icon-cross');\n      el.classList.add('icon-refresh');\n      stopStreamedVideo(video);\n    }\n    if (elClass === 'icon-refresh') {\n      el.classList.remove('icon-refresh');\n      el.classList.add('icon-cross');\n      location.reload();\n    }\n  });\n});\n"]}